{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./common/dynamodb.js","webpack:///external \"aws-sdk\"","webpack:///external \"dotenv\"","webpack:///external \"source-map-support/register\""],"names":["require","config","path","options","console","log","process","env","IS_OFFLINE","region","endpoint","dynamoDB","DynamoDB","DocumentClient"],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;;;;;;;;;;AClEA;;AADA,mBAAAA,CAAQ,sBAAR,EAAkBC,MAAlB,CAAyB,EAAEC,MAAM,SAAR,CAAkB,sCAAlB,EAAzB;AACoC;AACpC;AACA,IAAIC,UAAU,EAAd;AACAC,QAAQC,GAAR,CAAY,oBAAZ,EAAkCC,QAAQC,GAAR,CAAYC,UAA9C;AACA;AACA,IAAI,CAACF,QAAQC,GAAR,CAAYC,UAAjB,EAA6B;AAC5BJ,SAAQC,GAAR,CAAY,mBAAZ;AACAF,WAAU;AACTM,UAAQ,WADC;AAETC,YAAU;AAFD,EAAV;AAIA;;AAEDN,QAAQC,GAAR,CAAY,SAAZ;AACA,IAAMM,WAAW,IAAIC,iBAASC,cAAb,CAA4BV,OAA5B,CAAjB;;kBAEeQ,Q;;;;;;;;;;;ACjBf,oC;;;;;;;;;;;ACAA,mC;;;;;;;;;;;ACAA,wD","file":"common/dynamodb.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./common/dynamodb.js\");\n","require(\"dotenv\").config({ path: \"../.env\" /* path to your project root folder */ });\nimport { DynamoDB } from 'aws-sdk'; // eslint-disable-line import/no-extraneous-dependencies\n// import AWS from 'aws-sdk';\nlet options = {};\nconsole.log('Envoirment -----> ', process.env.IS_OFFLINE)\n// connect to local DB if running offline\nif (!process.env.IS_OFFLINE) {\n\tconsole.log('Inside of offline')\n\toptions = {\n\t\tregion: 'us-east-1',\n\t\tendpoint: 'http://localhost:8000',\n\t};\n}\n\nconsole.log('Outside')\nconst dynamoDB = new DynamoDB.DocumentClient(options);\n\nexport default dynamoDB;","module.exports = require(\"aws-sdk\");","module.exports = require(\"dotenv\");","module.exports = require(\"source-map-support/register\");"],"sourceRoot":""}